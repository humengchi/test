	//
//  ADGeofenceUpdateViewController.m
//  OBDClient
//
//  Created by Holyen Zou on 13-5-23.
//  Copyright (c) 2013年 AnyData.com. All rights reserved.
//

#import "ADGeofenceUpdateViewController.h"
#import "ADGeofenceDraw.h"
#import "ADGeoLineDraw.h"

@interface ADGeofenceUpdateViewController ()

@end

@implementation ADGeofenceUpdateViewController

- (id)initWithNibName:(NSString *)nibNameOrNil
               bundle:(NSBundle *)nibBundleOrNil
         geofenceBase:(ADGeofenceBase *)aGeofenceBase
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        _geofenceModel = [[ADGeofenceModel alloc] init];
        _oldGenfenceBase = aGeofenceBase;
        if (_oldGenfenceBase) {
            _type = GEOFENCE_TYPE_EDIT;
            _newGenfenceBase = [ADGeofenceBase initWithCopy:aGeofenceBase];
        } else {
            _type = GEOFENCE_TYPE_NEW;
            _newGenfenceBase = [[ADGeofenceBase alloc] init];
            _newGenfenceBase.pCount = @"";
            [self changeNameButtonTap:nil];
        }
        NSNotificationCenter *notiCenter = [NSNotificationCenter defaultCenter];
        [notiCenter addObserver:self
                       selector:@selector(updateGeofenceSuccess:)
                           name:ADGeofenceModelUpdateSuccessNotification
                         object:nil];
        [notiCenter addObserver:self
                       selector:@selector(updateGeofenceFail:)
                           name:ADGeofenceModelUpdateFailNotification
                         object:nil];
        [notiCenter addObserver:self
                       selector:@selector(updateGeofenceTimeout:)
                           name:ADGeofenceModelUpdateTimeoutNotification
                         object:nil];
        
        [notiCenter addObserver:self
                       selector:@selector(generateGeofenceSuccess:)
                           name:ADGeofenceModelCreateSuccessNotification
                         object:nil];
        [notiCenter addObserver:self
                       selector:@selector(generateGeofenceFail:)
                           name:ADGeofenceModelCreateFailNotification
                         object:nil];
        [notiCenter addObserver:self
                       selector:@selector(generateGeofenceTimeout:)
                           name:ADGeofenceModelCreateTimeoutNotification
                         object:nil];
        [[NSNotificationCenter defaultCenter] addObserver:self
                                                 selector:@selector(LoginTimeOut)
                                                     name:ADGeofenceModelLoginTimeOutNotification
                                                   object:nil];

        
    }
    return self;
}

- (void)updateDeviceID:(NSString *)aDeviceID
{
    _deviceID = aDeviceID;
    _newGenfenceBase.deviceID = _deviceID;
}

- (void)generateGeofenceSuccess:(NSNotification *)aNoti
{
    [IVToastHUD endRequestWithResultType:IV_TOAST_REQUEST_SUCCESS message:nil];
    [self.navigationController popViewControllerAnimated:YES];
}

- (void)generateGeofenceFail:(NSNotification *)aNoti
{
    [IVToastHUD endRequestWithResultType:IV_TOAST_REQUEST_FIAL message:[[ADSingletonUtil sharedInstance] errorStringByResultCode:[aNoti.userInfo objectForKey:@"resultCode"]]];
}

- (void)generateGeofenceTimeout:(NSNotification *)aNoti
{
    [IVToastHUD endRequestWithResultType:IV_TOAST_REQUEST_TIMEOUT message:NSLocalizedStringFromTable(@"networkTimeoutKey",@"MyString", @"")];
}

- (void)updateGeofenceSuccess:(NSNotification *)aNoti
{
    [IVToastHUD endRequestWithResultType:IV_TOAST_REQUEST_SUCCESS message:nil];
    _oldGenfenceBase = [ADGeofenceBase initWithCopy:_newGenfenceBase];
}

- (void)updateGeofenceFail:(NSNotification *)aNoti
{
    [IVToastHUD endRequestWithResultType:IV_TOAST_REQUEST_FIAL message:[[ADSingletonUtil sharedInstance] errorStringByResultCode:[aNoti.userInfo objectForKey:@"resultCode"]]];
}

- (void)updateGeofenceTimeout:(NSNotification *)aNoti
{
    [IVToastHUD endRequestWithResultType:IV_TOAST_REQUEST_TIMEOUT message:NSLocalizedStringFromTable(@"networkTimeoutKey",@"MyString", @"")];
}

- (void)dealloc
{
    NSLog(@"dealloc");
    if(_mapView){
        _mapView=nil;
    }
    if(_circleImageView){
        _circleImageView=nil;
    }
    if (_circleLineView) {
        _circleLineView=nil;
    }
    NSNotificationCenter *notiCenter = [NSNotificationCenter defaultCenter];
    [notiCenter removeObserver:self
                          name:ADGeofenceModelUpdateSuccessNotification
                        object:nil];
    [notiCenter removeObserver:self
                          name:ADGeofenceModelUpdateFailNotification
                        object:nil];
    [notiCenter removeObserver:self
                          name:ADGeofenceModelUpdateTimeoutNotification
                        object:nil];
    
    [notiCenter removeObserver:self
                          name:ADGeofenceModelCreateSuccessNotification
                        object:nil];
    [notiCenter removeObserver:self
                          name:ADGeofenceModelCreateFailNotification
                        object:nil];
    [notiCenter removeObserver:self
                          name:ADGeofenceModelCreateTimeoutNotification
                        object:nil];
    
    [_geofenceModel cancel];
}

- (void)generateGeofenceBase
{
    [IVToastHUD showAsToastWithStatus:NSLocalizedStringFromTable(@"updataKey",@"MyString", @"")];
    [_geofenceModel createGeofenceWithGeofenceBase:_newGenfenceBase];
}

- (void)updateGeofenceBase
{
    [IVToastHUD showAsToastWithStatus:NSLocalizedStringFromTable(@"updataKey",@"MyString", @"")];
    [_geofenceModel updateGeofenceWithNewGeofenceBase:_newGenfenceBase oldGeofenceBase:_oldGenfenceBase];
}

-(void)viewWillDisappear:(BOOL)animated
{
    [_mapView viewWillDisappear];
    _mapView.delegate = nil; // 不用时，置nil
}

-(void)viewWillAppear:(BOOL)animated{
    [_mapView viewWillAppear];
    _mapView.delegate = self;
}

- (void)viewDidLoad
{
    NSLog(@"didload");
    [super viewDidLoad];
    UIBarButtonItem *saveItem = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemDone target:self action:@selector(saveButtonTap:) ];
    saveItem.possibleTitles = [NSSet setWithObject:@""];
    
    UIBarButtonItem *reNameItem = [[UIBarButtonItem alloc] initWithTitle:NSLocalizedStringFromTable(@"renameKey",@"MyString", @"") style:UIBarButtonItemStyleBordered target:self action:@selector(changeNameButtonTap:)];
    reNameItem.possibleTitles = [NSSet setWithObject:@""];
    self.navigationItem.rightBarButtonItem = reNameItem;
    
    self.navigationItem.rightBarButtonItems = [NSArray arrayWithObjects:saveItem,reNameItem, nil];
    
    if (IOS7_OR_LATER) {
        saveItem.tintColor=[UIColor lightGrayColor];
        reNameItem.tintColor=[UIColor lightGrayColor];
    }
    self.title = _oldGenfenceBase.geoName;
    _mapView = [[BMKMapView alloc] initWithFrame:CGRectMake(0, 0, self.view.bounds.size.width, self.view.bounds.size.height-44)];
    [self.view addSubview:_mapView];
    
    _genfenceInfoLabel = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, 320, 40)];
    _genfenceInfoLabel.textColor = [UIColor blackColor];
    _genfenceInfoLabel.font=[UIFont systemFontOfSize:13];
    _genfenceInfoLabel.textAlignment = UITextAlignmentCenter;
    _genfenceInfoLabel.alpha=0.8;
    [_genfenceInfoLabel setBackgroundColor:[UIColor whiteColor]];
    [self.view addSubview:_genfenceInfoLabel];
    
    //在分辨率不同的设备上显示有误差，若需支持多分辨率，updateMapZoom需做差异处理
    _circleImageView = [[ADGeofenceDraw alloc] initWithFrame:CGRectZero];
    _circleLineView = [[ADGeoLineDraw alloc] initWithFrame:CGRectZero];
    
    if (_type == GEOFENCE_TYPE_EDIT) {
        CLLocationCoordinate2D coor = {_oldGenfenceBase.lat1, _oldGenfenceBase.lng1};
        [_mapView setCenterCoordinate:coor animated:YES];
        _circle = [BMKCircle circleWithCenterCoordinate:CLLocationCoordinate2DMake(_oldGenfenceBase.lat1, _oldGenfenceBase.lng1) radius:_oldGenfenceBase.radius];
        NSLog(@"_oldGenfenceBase.radius:%f",_oldGenfenceBase.radius);
        [self updateMapZoom];
    } else {
        CLLocationCoordinate2D coor;
        if ([ADSingletonUtil sharedInstance].currentDeviceBase.latitude==0&&[ADSingletonUtil sharedInstance].currentDeviceBase.longitude==0) {
            coor = CLLocationCoordinate2DMake(31.2105889593161, 121.492910330211);
        }else{
            coor = CLLocationCoordinate2DMake([ADSingletonUtil sharedInstance].currentDeviceBase.latitude, [ADSingletonUtil sharedInstance].currentDeviceBase.longitude);
        }
        NSDictionary *tip = BMKBaiduCoorForWgs84(coor);
        //纠偏
        CLLocationCoordinate2D coordinate = BMKCoorDictionaryDecode(tip);
        [_mapView setZoomLevel:16];
        [_mapView setCenterCoordinate:coordinate animated:YES];
        
        
        _circleImageView.frame=CGRectMake((_mapView.frame.size.width - 250) / 2, (_mapView.frame.size.height - 250) / 2, 250, 250);
        _circleLineView.frame=CGRectMake((_mapView.frame.size.width - 250) / 2, (_mapView.frame.size.height - 250) / 2, 250, 250);
        
        
//        _circleImageView= [[ADGeofenceDraw alloc]initWithFrame:CGRectMake((_mapView.bounds.size.width - 250) / 2, (_mapView.bounds.size.height - 44 - 250) / 2, 250, 250)];
//        [self.view addSubview:_circleImageView];
        
//        _circleImageView = [[UIImageView alloc] initWithFrame:CGRectMake((_mapView.bounds.size.width - 250) / 2, (_mapView.bounds.size.height - 44 - 250) / 2, 250, 250)];
        CGRect rectOfImageView = _circleImageView.frame;
        _circle = [BMKCircle circleWithMapRect:[_mapView convertRect:rectOfImageView toMapRectFromView:_mapView]];
        
        NSLog(@"newGenfenceBase.radius:%f",_circle.radius);
    }
    
//    [_circleImageView setImage:[UIImage imageNamed:@"geofence_map_overlay_set.png"]];
    
    [self.view addSubview:_circleLineView];
    [self.view addSubview:_circleImageView];
    [self updateInfoUI];

    
    
    [_circleImageView setUserInteractionEnabled:YES];
    UIPinchGestureRecognizer *pinGesture = [[UIPinchGestureRecognizer alloc] initWithTarget:self
                                                                                     action:@selector(circleImagePin:)];
    [pinGesture setDelegate:self];
    [_circleImageView addGestureRecognizer:pinGesture];
    
    if (IOS7_OR_LATER && !DEVICE_IS_IPHONE5) {            //IOS7.0 3.5寸屏幕
        [_mapView setFrame:CGRectMake(0, 64, 320, 416)];
        [_genfenceInfoLabel setFrame:CGRectMake(0, 64, 320, 40)];
        UIView* view=[[UIView alloc]initWithFrame:CGRectMake(0, 0, 320, 20)];
        [view setBackgroundColor:[UIColor grayColor]];
        [self.view addSubview:view];
        CGRect frame=_circleImageView.frame;
        frame.origin.y+=50;
        [_circleImageView setFrame:frame];
        
        frame=_circleLineView.frame;
        frame.origin.y+=50;
        [_circleLineView setFrame:frame];
	}
    if (!IOS7_OR_LATER && DEVICE_IS_IPHONE5) {            //IOS6.0 4.0寸屏幕
        [_mapView setFrame:CGRectMake(0, 0, 320, 504)];
    }
    if (IOS7_OR_LATER && DEVICE_IS_IPHONE5) {             //IOS7.0 4.0寸屏幕
        [_mapView setFrame:CGRectMake(0, 64, 320, 504)];
        [_genfenceInfoLabel setFrame:CGRectMake(0, 64, 320, 40)];
        CGRect frame=_circleImageView.frame;
        frame.origin.y+=50;
        [_circleImageView setFrame:frame];
        
        frame=_circleLineView.frame;
        frame.origin.y+=50;
        [_circleLineView setFrame:frame];
        UIView* view=[[UIView alloc]initWithFrame:CGRectMake(0, 0, 320, 20)];
        [view setBackgroundColor:[UIColor grayColor]];
        [self.view addSubview:view];
        
	}

    [self addVehicleToMap];

}

//- (void)touchesEnded:(NSSet *)touches withEvent:(UIEvent *)event{
//    NSLog(@"%@",touches.description);
//}

- (void)addVehicleToMap{
    NSLog(@"addvehicletomap");
    ADDeviceBase *deviceBase=[ADSingletonUtil sharedInstance].currentDeviceBase;
    BMKPointAnnotation *annotation = [[BMKPointAnnotation alloc] init];
    CLLocationCoordinate2D coor;
    coor.latitude = deviceBase.latitude;
    coor.longitude = deviceBase.longitude;
    if(coor.latitude==0&&coor.longitude==0){
        if(deviceBase.lastLocation==nil){
           
        }else{
            NSLog(@"%@",[deviceBase.lastLocation objectForKey:@"latitude"]);
            if([deviceBase.lastLocation objectForKey:@"latitude"]==[NSNull null]||[deviceBase.lastLocation objectForKey:@"longitude"]==[NSNull null]){
                //
            }
            coor.latitude = [[deviceBase.lastLocation objectForKey:@"latitude"] floatValue];
            coor.longitude = [[deviceBase.lastLocation objectForKey:@"longitude"] floatValue];
            NSDictionary *tip = BMKBaiduCoorForWgs84(coor);
            //纠偏
            CLLocationCoordinate2D coordinate = BMKCoorDictionaryDecode(tip);
            annotation.coordinate = coordinate;
            [_mapView addAnnotation:annotation];
        }
    }else{
        
        NSDictionary *tip = BMKBaiduCoorForWgs84(coor);
        //纠偏
        CLLocationCoordinate2D coordinate = BMKCoorDictionaryDecode(tip);
        annotation.coordinate = coordinate;
        [_mapView addAnnotation:annotation];
    }

}

- (BMKAnnotationView *)mapView:(BMKMapView *)mapView
             viewForAnnotation:(id<BMKAnnotation>)annotation
{
    NSLog(@"geoannotation");
    if ([annotation isKindOfClass:[BMKPointAnnotation class]]) {
        BMKPinAnnotationView *newAnnotationView = [[BMKPinAnnotationView alloc] initWithAnnotation:annotation
                                                                                   reuseIdentifier:@"geo"];
        newAnnotationView.pinColor = BMKPinAnnotationColorGreen;
        newAnnotationView.enabled=NO;
        newAnnotationView.enabled3D=YES;
        newAnnotationView.animatesDrop = NO;//标注的动画效果.
//        newAnnotationView.image = [UIImage imageNamed:@"car.png"];
        return newAnnotationView;
    }
    return nil;
    
}

- (void)changeNameButtonTap:(id)sender
{
    if(_type == GEOFENCE_TYPE_EDIT&&[_oldGenfenceBase.cmdType isEqualToString:@"0"]){
        [IVToastHUD showAsToastErrorWithStatus:NSLocalizedStringFromTable(@"beingDeleted",@"MyString", @"")];
        return;
    }
    
    UIAlertView *alertView = [[UIAlertView alloc]initWithTitle:@""
                                                       message:NSLocalizedStringFromTable(@"enterTheNewNameKey",@"MyString", @"")
                                                      delegate:self
                                             cancelButtonTitle:NSLocalizedStringFromTable(@"cancelKey",@"MyString", @"")
                                             otherButtonTitles:NSLocalizedStringFromTable(@"ensureKey",@"MyString", @""), nil];
    alertView.alertViewStyle = UIAlertViewStylePlainTextInput;
    [alertView textFieldAtIndex:0].text = _newGenfenceBase.geoName;
    [alertView textFieldAtIndex:0].delegate = self;
    [alertView show];
}

- (void)updateMapZoom
{
    double radius = _oldGenfenceBase.radius;
    double imageView_radius;
    if (radius <= 500 && radius >= 300) {
        [_mapView setZoomLevel:17];
        imageView_radius = radius / 2;
    }else if(radius <= 1000 && radius > 500)
    {
        [_mapView setZoomLevel:16];
        imageView_radius = radius / 4;
    }else if(radius <= 2000 && radius > 1000)
    {
        [_mapView setZoomLevel:15];
        imageView_radius = radius / 8;
    }else
    {
        [_mapView setZoomLevel:14];
        imageView_radius = radius / 16;
    }
    _circleImageView.frame = CGRectMake((_mapView.frame.size.width - imageView_radius)/2, (_mapView.frame.size.height - imageView_radius)/2, imageView_radius, imageView_radius);
    _circleLineView.frame = CGRectMake((_mapView.frame.size.width - imageView_radius)/2, (_mapView.frame.size.height - imageView_radius)/2, imageView_radius, imageView_radius);
}

- (void)saveButtonTap:(id)sender
{
    if(_type == GEOFENCE_TYPE_EDIT&&[_oldGenfenceBase.cmdType isEqualToString:@"0"]){
        [IVToastHUD showAsToastErrorWithStatus:NSLocalizedStringFromTable(@"beingDeleted",@"MyString", @"")];
        return;
    }
    
    if (_newGenfenceBase.radius > 2250) {
        UIAlertView *alert=[[UIAlertView alloc] initWithTitle:NSLocalizedStringFromTable(@"failedToSetGeofenceKey",@"MyString", @"")
                                                      message:NSLocalizedStringFromTable(@"geofenceNotMoreThan2250metersKey",@"MyString", @"")
                                                     delegate:self
                                            cancelButtonTitle:NSLocalizedStringFromTable(@"ensureKey",@"MyString", @"")
                                            otherButtonTitles:nil];
        [alert show];
        return;
        
    } else if(_newGenfenceBase.radius < 300) {
        UIAlertView *alert=[[UIAlertView alloc] initWithTitle:NSLocalizedStringFromTable(@"failedToSetGeofenceKey",@"MyString", @"")
                                                      message:NSLocalizedStringFromTable(@"geofenceNotLessThan300metersKey",@"MyString", @"")
                                                     delegate:self
                                            cancelButtonTitle:NSLocalizedStringFromTable(@"ensureKey",@"MyString", @"")
                                            otherButtonTitles:nil];
        [alert show];
        return;
    }
    
    if ([_newGenfenceBase.geoName isEqualToString:@""]) {
        [IVToastHUD showAsToastErrorWithStatus:NSLocalizedStringFromTable(@"pleaseEnterTheNameOfTheGeofenceKey",@"MyString", @"")];
        return;
    }
    
    if (_type == GEOFENCE_TYPE_EDIT) {
        [self updateGeofenceBase];
    } else if (_type == GEOFENCE_TYPE_NEW) {
        [self generateGeofenceBase];
    }
}

- (void)circleImagePin:(UIPinchGestureRecognizer *)aRecogn
{
    if (aRecogn.state == UIGestureRecognizerStateEnded) {
        NSLog(@"width:%f--height:%f",_circleImageView.frame.size.width,_circleImageView.frame.size.height);
        if (_circleImageView.frame.size.width > 320) {
            [UIView beginAnimations:nil context:nil];
            [UIView setAnimationDuration:0.50];
            _circleImageView.frame = CGRectMake(0, ((_mapView.frame.size.height - 320) / 2)+_mapView.frame.origin.y, 320, 320);
            _circleLineView.frame=_circleImageView.frame;
            [UIView commitAnimations];
        } else {
            [UIView beginAnimations:nil context:nil];
            [UIView setAnimationDuration:0.1];
            aRecogn.view.transform = CGAffineTransformScale(aRecogn.view.transform, aRecogn.scale, aRecogn.scale);
            [UIView commitAnimations];
        }
        
    }
    else
    {
        aRecogn.view.transform = CGAffineTransformScale(aRecogn.view.transform, aRecogn.scale, aRecogn.scale);
    }
    aRecogn.scale = 1;
    _circleLineView.frame=_circleImageView.frame;
    [_circleLineView setNeedsDisplay];
    _circle = [BMKCircle circleWithMapRect:[_mapView convertRect:_circleImageView.frame toMapRectFromView:self.view]];
    [self updateInfoUI];
}

- (void)updateInfoUI
{
    NSString *showGenfenceRadius = [[NSString alloc] initWithFormat:@"%@，%@%d%@",NSLocalizedStringFromTable(@"toSetTheMinimumRadiusOf300MetersKey",@"MyString", @""), NSLocalizedStringFromTable(@"currentKey",@"MyString", @""),(int)_circle.radius,NSLocalizedStringFromTable(@"metersKey",@"MyString", @"")];
    _genfenceInfoLabel.text = showGenfenceRadius;
    
    NSLog(@"%@",showGenfenceRadius);

    _newGenfenceBase.radius = _circle.radius;
    _newGenfenceBase.lat1 = _circle.coordinate.latitude;
    _newGenfenceBase.lng1 = _circle.coordinate.longitude;
}

#pragma mark - UIAlertViewDelegate

- (void)alertView:(UIAlertView *)alertView didDismissWithButtonIndex:(NSInteger)buttonIndex
{
    if (alertView.alertViewStyle == UIAlertViewStylePlainTextInput && buttonIndex == 1) {
        if (_type == GEOFENCE_TYPE_EDIT) {
            [self updateGeofenceBase];
        }
    }
}

#pragma mark - UITextFieldDelegate

- (void)textFieldDidEndEditing:(UITextField *)textField
{
    _newGenfenceBase.geoName = textField.text;
    self.title = _newGenfenceBase.geoName;
}

#pragma mark - map

- (void)mapView:(BMKMapView *)mapView regionDidChangeAnimated:(BOOL)animated
{
    CGRect rectOfImageView = _circleImageView.frame;
    _circle = [BMKCircle circleWithMapRect:[_mapView convertRect:rectOfImageView toMapRectFromView:self.view]];
    NSLog(@"%f",(double)_circle.radius);
    [self updateInfoUI];
}

#pragma mark - gesture
- (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer
       shouldReceiveTouch:(UITouch *)touch
{
    if (touch.view == _circleImageView) {
        return YES;
    }
    return NO;
}

- (void)LoginTimeOut{
    UIViewController* login=[[ADiPhoneLoginViewController alloc]initWithNibName:nil bundle:nil];
    [self.view.window setRootViewController:login];
}

@end
